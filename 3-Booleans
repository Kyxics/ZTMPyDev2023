# Booleans
# True/False

# A boolean value is either TRUE or FALSE
# Thus any comparison operations will yield a boolean value.
# Testing this can be done using print(bool()):
Example: Want to check if 1 + 1 is 2
    print(bool(1+1==2)) -> will yield <True> as an output. Output here is a Boolean type value.
    
# 0's and 1's
bool() can also be used with 0/1 in the classic sense of "off/on":
bool(0) -> False
bool(1) -> True
As the inputs here are ints, this can be taken advantage of in complex code/computations.

# strings 'True'/'False'
Beware that a string variant of the values can be parsed into bool():
bool('True') / bool('true') / bool('False') / bool('false')
# However, these will all yield <True>
# Reason is that bool() here is checking against the datatype similar to int().
# i.e. We are now asking "is the string a boolean value" instead of "is this true or false".

